name: CI Tests

on: 
  pull_request:
  push:
    branches:
      - '*'

jobs:
  Ubuntu:

    runs-on: ubuntu-20.04

    name: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install prerequisties
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            qtbase5-dev \
            qttools5-dev \
            libqt5svg5-dev \
            libqt5opengl5-dev \
            libmuparser-dev \
            libgsl-dev \
            pyqt5-dev \
            python3-pyqt5 \
            libgtest-dev \
            python3-numpy \
            xvfb

      - name: Configuring
        run: |
          mkdir build && cd build
          cmake .. \
            -DMAKHBER_SEARCH_FOR_UPDATES=OFF \
            -DMAKHBER_DOWNLOAD_LINKS=OFF \
            -DMAKHBER_SCRIPTING_PYTHON=ON \
            -DMAKHBER_BUILD_TESTS=ON

      - name: Building
        run: |
          xvfb-run make -j$(nproc) -C build

      - name: Testing
        run: |
          cd build
          export PYTHONPATH=$PWD/makhber
          xvfb-run -a ctest --output-on-failure

  MSVC:
    name: Windows MSVC
    runs-on: windows-latest
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Setup NuGet Credentials
        run: |
          & $(vcpkg fetch nuget | select -last 1) sources add `
          -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
          -storepasswordincleartext `
          -name "GitHub" `
          -username ${{ github.repository_owner }} `
          -password "${{ secrets.GITHUB_TOKEN }}"

      - name: vcpkg package restore
        run: |
          vcpkg install zlib gsl muparser opengl gl2ps gtest --triplet x64-windows

      - name: Install Python packages
        run: pip install sip==5.5.0 pyqt5 numpy

      - name: Configuring
        run: |
          mkdir build; cd build
          cmake .. `
            -DCMAKE_TOOLCHAIN_FILE="$Env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake" `
            -DMAKHBER_SCRIPTING_PYTHON=ON `
            -DMAKHBER_BUILD_TESTS=ON

      - name: Building
        run: |
          cmake --build build --config Release -- -maxCpuCount

      - name: Testing
        run: |
          cd build
          $Env:PYTHONPATH = "$PWD\makhber\Release"
          ctest -C Release --output-on-failure

  macos:

    runs-on: macos-latest

    name: macos

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install prerequisties
        run: |
          brew install qt@5 muparser gsl gl2ps googletest
          pip3 install sip==5.5.0 pyqt5 numpy

      - name: Configuring
        run: |
          export PATH=/usr/local/opt/qt@5/bin:$PATH
          mkdir build && cd build
          cmake .. \
            -DMAKHBER_SCRIPTING_PYTHON=ON \
            -DMAKHBER_BUILD_TESTS=ON

      - name: Building
        run: |
          make -j$(sysctl -n hw.logicalcpu) -C build

      - name: Testing
        run: |
          cd build
          export PYTHONPATH=$PWD/makhber/makhber.app/Contents/Resources
          ctest --output-on-failure
